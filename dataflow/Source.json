{
	"name": "Source",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Hospital",
						"type": "DatasetReference"
					},
					"name": "Hospital"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Output",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "Output",
						"type": "DatasetReference"
					},
					"name": "sink2"
				},
				{
					"dataset": {
						"referenceName": "Output",
						"type": "DatasetReference"
					},
					"name": "sink3"
				},
				{
					"name": "sink4"
				},
				{
					"dataset": {
						"referenceName": "Output",
						"type": "DatasetReference"
					},
					"name": "sink5"
				},
				{
					"dataset": {
						"referenceName": "Output",
						"type": "DatasetReference"
					},
					"name": "sink6"
				},
				{
					"dataset": {
						"referenceName": "Output",
						"type": "DatasetReference"
					},
					"name": "sink7"
				},
				{
					"dataset": {
						"referenceName": "Output",
						"type": "DatasetReference"
					},
					"name": "sink8"
				},
				{
					"dataset": {
						"referenceName": "Output",
						"type": "DatasetReference"
					},
					"name": "sink9"
				}
			],
			"transformations": [
				{
					"name": "ConditionalSplit1"
				},
				{
					"name": "Sort1"
				},
				{
					"name": "Sort2"
				},
				{
					"name": "Sort3"
				},
				{
					"name": "Sort4"
				},
				{
					"name": "Sort5"
				},
				{
					"name": "Sort6"
				},
				{
					"name": "Sort7"
				},
				{
					"name": "Sort8"
				},
				{
					"name": "Sort9"
				},
				{
					"name": "Sort10"
				},
				{
					"name": "Select1"
				}
			],
			"script": "source(output(\n\t\tcountry as string,\n\t\tindicator as string,\n\t\tdate as date,\n\t\tyear_week as string,\n\t\tvalue as double,\n\t\tsource as string,\n\t\turl as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tpartitionBy('hash', 1)) ~> Hospital\nSelect1 split(source =='Surveillance',\n\tsource == 'Country_Website',\n\tsource =='TESSy COVID-19, national weekly data',\n\tsource =='External_Github',\n\tsource =='TESSy COVID-19, national daily data',\n\tsource =='Country_API',\n\tsource =='',\n\tsource =='JRC',\n\tsource =='Country_Github',\n\tsource =='Other Website',\n\tdisjoint: false,\n\tpartitionBy('hash', 1)) ~> ConditionalSplit1@(Surveillance, CountryWebsite, NationalWeeklyData, ExternalGithub, NationalDailyData, CountryAPI, Blank, JRC, CountryGithub, OtherWebsite)\nConditionalSplit1@Surveillance sort(desc(value, true),\n\tpartitionBy('hash', 1)) ~> Sort1\nConditionalSplit1@CountryWebsite sort(desc(value, true),\n\tpartitionBy('hash', 1)) ~> Sort2\nConditionalSplit1@NationalWeeklyData sort(desc(value, true),\n\tpartitionBy('hash', 1)) ~> Sort3\nConditionalSplit1@ExternalGithub sort(desc(value, true),\n\tpartitionBy('hash', 1)) ~> Sort4\nConditionalSplit1@NationalDailyData sort(asc(ERROR_FUNCTION(''), true),\n\tpartitionBy('hash', 1)) ~> Sort5\nConditionalSplit1@CountryAPI sort(desc(value, true),\n\tpartitionBy('hash', 1)) ~> Sort6\nConditionalSplit1@Blank sort(desc(value, true),\n\tpartitionBy('hash', 1)) ~> Sort7\nConditionalSplit1@JRC sort(desc(value, true)) ~> Sort8\nConditionalSplit1@CountryGithub sort(desc(value, true),\n\tpartitionBy('hash', 1)) ~> Sort9\nConditionalSplit1@OtherWebsite sort(desc(value, true),\n\tpartitionBy('hash', 1)) ~> Sort10\nHospital select(mapColumn(\n\t\tcountry,\n\t\tindicator,\n\t\tdate,\n\t\tyear_week,\n\t\tvalue,\n\t\tsource\n\t),\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSort1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1\nSort2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink2\nSort3 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink3\nSort4 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink4\nSort5 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink5\nSort6 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink6\nSort7 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink7\nSort8 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink8\nSort9 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink9"
		}
	}
}